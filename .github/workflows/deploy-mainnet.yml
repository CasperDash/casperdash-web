name: Deploy To Mainnet

on:
    push:
      branches:
        - main

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    deploy-testnet:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18]

        steps:
              - uses: actions/checkout@v3
              - name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v3
                with:
                    cache: 'yarn'
                    node-version: ${{ matrix.node-version }}
              - name: Run install
                uses: borales/actions-yarn@v4
                with:
                    cmd: install
              - name: Cache node_modules
                uses: actions/cache@v3
                id: cache-node-modules
                with:
                  path: |
                    node_modules
                  key: modules-${{ hashFiles('yarn.lock') }}

              - name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v2
                with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-southeast-1

              - name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v3
                with:
                    node-version: ${{ matrix.node-version }}

              - name: Build
                run : |
                    yarn build:prod
              - name: Deploy to S3
                run : |
                    aws s3 sync ./dist/ s3://casperdash.io/ --delete
                    aws s3 cp s3://casperdash.io/index.html s3://casperdash.io/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read
                    aws s3 cp s3://casperdash.io/sw.js s3://casperdash.io/sw.js --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/javascript --acl public-read
                    aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*" --no-cli-pager
